// <auto-generated />
using System;
using Basket.Infrastructure.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Basket.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(BasketDbContext))]
    [Migration("20250913230831_InitDb")]
    partial class InitDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("basket")
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Basket.Domain.Entities.BasketCatalogItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CatalogItemName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal?>("LatestPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("UserBasketId")
                        .HasColumnType("int");

                    b.Property<bool>("UserChangedSeen")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("UserBasketId");

                    b.ToTable("BasketCatalogItems", "basket");
                });

            modelBuilder.Entity("Basket.Domain.Entities.UserBasket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BasketType")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserBaskets", "basket");

                    b.HasDiscriminator<string>("BasketType").HasValue("UserBasket");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Basket.Domain.Entities.PrimaryUserBasket", b =>
                {
                    b.HasBaseType("Basket.Domain.Entities.UserBasket");

                    b.HasDiscriminator().HasValue("Primary");
                });

            modelBuilder.Entity("Basket.Domain.Entities.SecondaryUserBasket", b =>
                {
                    b.HasBaseType("Basket.Domain.Entities.UserBasket");

                    b.HasDiscriminator().HasValue("Secondary");
                });

            modelBuilder.Entity("Basket.Domain.Entities.BasketCatalogItem", b =>
                {
                    b.HasOne("Basket.Domain.Entities.UserBasket", "UserBasket")
                        .WithMany("Items")
                        .HasForeignKey("UserBasketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserBasket");
                });

            modelBuilder.Entity("Basket.Domain.Entities.UserBasket", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
